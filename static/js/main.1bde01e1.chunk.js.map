{"version":3,"sources":["components/App.jsx","reportWebVitals.js","index.js"],"names":["App","intervalTimer","generate","state","maze","graphic","json","nodeID","lengthInput","heightInput","intervalInput","styleOption","methodOption","playMode","this","setInterval","tick","clearInterval","next","updateMazeGenerator","mazeDimensions","mazeMethod","setState","MazeGenerator","createPipedTextGraphic","graph","createEdgedTextGraphic","data","find","node","status","id","JSON","stringify","parse","generator","value","isNaN","className","name","type","defaultChecked","disabled","onChange","htmlFor","placeholder","min","event","target","validateNaturalNumber","parseInt","list","max","step","label","onClick","clearMazeGenerator","createMazeGenerator","length","filter","cell","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bde01e1.chunk.js","sourcesContent":["import React from 'react'\nimport MazeGenerator from 'maze-algorithms'\nimport {\n\tcreatePipedTextGraphic,\n\tcreateEdgedTextGraphic,\n} from 'maze-visualizer'\nimport './App.css'\n\nexport default class App extends React.Component {\n\tconstructor () {\n\t\tsuper()\n\n\t\t// these items are programmatic \"strings\" or \"threads\"\n\t\t// that \"tug\" the ties of various components.\n\t\tthis.intervalTimer = null\n\t\tthis.generate = null\n\n\t\tthis.state = {\n\t\t\t// this is the primary object the app focuses on.\n\t\t\tmaze: null,\n\n\t\t\t// it can generate a few different things.\n\t\t\tgraphic: null,\n\t\t\tjson: null,\n\t\t\tnodeID: null,\n\n\t\t\t// to control the object and its generation,\n\t\t\t// the user gets some input options.\n\t\t\tlengthInput: null,\n\t\t\theightInput: null,\n\t\t\tintervalInput: null,\n\t\t\tstyleOption: null,\n\t\t\tmethodOption: null,\n\t\t\tplayMode: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.intervalTimer = setInterval(\n\t\t\t// Give the timer function.\n\t\t\t() => this.tick(),\n\n\t\t\t// Determine the interval amount.\n\t\t\tthis.state.intervalInput ?? 100,\n\t\t)\n\t}\n\n\tcomponentWillUnmount() {\n\t\t// When the component is gone, destroy the timer.\n\t\tclearInterval(this.intervalTimer)\n\t}\n\n\ttick() {\n\t\tif (this.state.playMode) {\n\t\t\t// Generate next step of algorithm.\n\t\t\tthis.generate.next()\n\t\t\t// Update state properties accordingly.\n\t\t\tthis.updateMazeGenerator()\n\t\t}\n\t}\n\n\tcreateMazeGenerator () {\n\t\tconst mazeDimensions = [\n\t\t\tthis.state.lengthInput ?? 10,\n\t\t\tthis.state.heightInput ?? 10,\n\t\t]\n\t\tconst mazeShape = 'hypercube'\n\t\tconst mazeMethod = this.state.methodOption\n\t\t\t?? 'iterative depth-first traversal'\n\n\t\tthis.setState(\n\t\t\t// Create a new maze object\n\t\t\t{maze: new MazeGenerator(\n\t\t\t\tmazeDimensions,\n\t\t\t\tmazeShape,\n\t\t\t\tmazeMethod,\n\t\t\t)},\n\n\t\t\t// Callback for setState()\n\t\t\tthis.updateMazeGenerator\n\t\t)\n\t}\n\n\tupdateMazeGenerator () {\n\t\tlet {maze, styleOption} = this.state\n\n\t\tlet graphic = null\n\t\tif (styleOption === null) {\n\t\t\tthis.setState({styleOption: 'pipe'})\n\t\t\tgraphic = createPipedTextGraphic(maze.graph)\n\t\t}\n\t\telse if (styleOption === 'pipe') {\n\t\t\tgraphic = createPipedTextGraphic(maze.graph)\n\t\t}\n\t\telse if (styleOption === 'edge') {\n\t\t\tgraphic = createEdgedTextGraphic(maze.graph)\n\t\t}\n\n\t\tconst nodeID = (\n\t\t\tmaze.graph.data.find((node) => {\n\t\t\t\treturn node.status === 'active'\n\t\t\t}) ?? {}\n\t\t).id ?? null\n\n\t\tconst json = JSON.stringify(JSON.parse(maze.graph.json), null, 2)\n\n\t\tthis.generate ??= maze.generator()\n\t\tthis.setState({\n\t\t\tmaze: maze,\n\t\t\tgraphic: graphic,\n\t\t\tjson: json,\n\t\t\tnodeID: nodeID,\n\t\t})\n\t}\n\n\tclearMazeGenerator () {\n\t\tthis.generate = null\n\t\tthis.setState({\n\t\t\tmaze: null,\n\t\t\tgraphic: null,\n\t\t\tjson: null,\n\t\t\tnodeID: null,\n\t\t\tgenerate: null,\n\t\t\tplayMode: null\n\t\t})\n\t}\n\n\tvalidateNaturalNumber (value) {\n\t\tif (value < 0) {\n\t\t\tvalue = 0\n\t\t}\n\t\telse if (value === '' || isNaN(value)) {\n\t\t\tvalue = null\n\t\t}\n\t\treturn value\n\t}\n\n\trender () { return ( <>\n\t\t<h1>\n\t\t\tMaze Generator\n\t\t</h1>\n\n\t\t<p>\n\t\t\tWelcome to my maze generator!\n\t\t</p>\n\t\t<p>\n\t\t\tNot only is this open-source maze generator available on github, but its components are available as npm packages.\n\t\t\tThat includes the maze algorithms, the graph representation, and the ASCII graph visualizer as well.\n\t\t</p>\n\n\t\t<fieldset>\n\t\t\t<legend>Generator Parameters</legend>\n\n\t\t\t<div>\n\t\t\t\t<label>Generator Method/Algorithm</label>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='iterative-depth-first-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='maze-algorithm'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tmethodOption: 'iterative depth-first traversal'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='iterative-depth-first-option'>\n\t\t\t\t\t\t\tIterative Depth-First Path\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='iterative-breadth-first-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='maze-algorithm'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={false}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tmethodOption: 'iterative breadth-first traversal'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='iterative-breadth-first-option'>\n\t\t\t\t\t\t\tIterative Breadth-First Path\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<label>Graphic Style</label>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='pipe-style-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='graphic-style'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tstyleOption: 'pipe'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='pipe-style-option'>\n\t\t\t\t\t\t\tPipe-Style Text Graphic\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='edge-style-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='graphic-style'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={false}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tstyleOption: 'edge'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='edge-style-option'>\n\t\t\t\t\t\t\tEdge-Style Text Graphic\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Maze Length</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Default: 10'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tdisabled={this.state.maze !== null}\n\t\t\t\t\tvalue={this.state.lengthInput ?? ''}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tlet {value} = event.target\n\t\t\t\t\t\tif (value !== null) {\n\t\t\t\t\t\t\tvalue = this.validateNaturalNumber(parseInt(value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({lengthInput: value})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Maze Height</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Default: 10'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tdisabled={this.state.maze !== null}\n\t\t\t\t\tvalue={this.state.heightInput ?? ''}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tlet {value} = event.target\n\t\t\t\t\t\tif (value !== null) {\n\t\t\t\t\t\t\tvalue = this.validateNaturalNumber(parseInt(value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({heightInput: value})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Autogen Speed</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='range'\n\t\t\t\t\tlist='tickmarks'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tmax='300'\n\t\t\t\t\tvalue={this.state.intervalInput ?? 200}\n\t\t\t\t\tstep='5'\n\n\t\t\t\t\tdisabled={this.state.playMode}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tlet {value} = event.target\n\t\t\t\t\t\tif (value !== null) {\n\t\t\t\t\t\t\tvalue = this.validateNaturalNumber(300 - parseInt(value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Clear and reset interval timer.\n\t\t\t\t\t\tclearInterval(this.intervalTimer)\n\t\t\t\t\t\tthis.intervalTimer = setInterval(() => this.tick(), value ?? 100)\n\t\t\t\t\t\tthis.setState({intervalInput: 300 - value})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<datalist id='tickmarks'>\n\t\t\t\t\t<option value='0' label='slow'></option>\n\t\t\t\t\t<option value='100'></option>\n\t\t\t\t\t<option value='200'  label='fast'></option>\n\t\t\t\t\t<option value='225'></option>\n\t\t\t\t\t<option value='250'></option>\n\t\t\t\t\t<option value='275'></option>\n\t\t\t\t\t<option value='300'></option>\n\t\t\t\t</datalist>\n\t\t\t</div>\n\n\t\t\t<hr />\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='↪️ Step'\n\t\t\t\tdisabled={this.state.maze === null || this.state.playMode}\n\n\t\t\t\tonClick={() => {\n\t\t\t\t\t// Generate next step of algorithm.\n\t\t\t\t\tthis.generate.next()\n\t\t\t\t\t// Update state properties accordingly.\n\t\t\t\t\tthis.updateMazeGenerator()\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue={this.state.playMode ? '⏸️ Pause' : '▶️ Play'}\n\t\t\t\tdisabled={this.state.maze === null}\n\n\t\t\t\tonClick={() => this.setState({playMode: !this.state.playMode})}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='⏹ Stop'\n\t\t\t\tdisabled={this.state.maze === null}\n\n\t\t\t\tonClick={() => {this.clearMazeGenerator()}}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='🔄 Create New'\n\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\tonClick={() => {this.createMazeGenerator()}}\n\t\t\t/>\n\t\t</fieldset>\n\n\t\t<progress\n\t\t\tmax={this.state.maze?.graph?.data?.length ?? 1}\n\t\t\tvalue={this.state.maze?.graph?.data?.filter((cell) => {\n\t\t\t\treturn cell.status === 'complete'\n\t\t\t}).length ?? 0}\n\t\t/>\n\n\t\t<figure>\n\t\t\t{/* <div>\n\t\t\t\t<label>active node: </label>\n\t\t\t\t<output>{this.state.nodeID ?? 'not selected'}</output>\n\t\t\t</div> */}\n\t\t\t<pre><code>{this.state.graphic ?? ''}</code></pre>\n\t\t\t{/* <pre><code>{this.state.json ?? ''}</code></pre> */}\n\t\t\t<figcaption>\n\t\t\t\tASCII Maze\n\t\t\t</figcaption>\n\t\t</figure>\n\t</> ) }\n}\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}