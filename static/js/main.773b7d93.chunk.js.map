{"version":3,"sources":["components/App.jsx","reportWebVitals.js","index.js"],"names":["App","state","maze","graphic","json","nodeID","lengthInput","heightInput","styleOption","methodOption","generate","mazeDimensions","this","mazeMethod","setState","MazeGenerator","updateMazeGenerator","createPipedTextGraphic","graph","createEdgedTextGraphic","data","find","node","status","id","JSON","stringify","parse","generator","value","isNaN","className","name","type","defaultChecked","disabled","onChange","htmlFor","placeholder","min","event","target","validateNaturalNumber","parseInt","onClick","next","updateGraphic","clearMazeGenerator","createMazeGenerator","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.773b7d93.chunk.js","sourcesContent":["import React from 'react'\nimport MazeGenerator from 'maze-algorithms'\nimport {\n\tcreatePipedTextGraphic,\n\tcreateEdgedTextGraphic,\n} from 'maze-visualizer'\nimport './App.css'\n\nexport default class App extends React.Component {\n\tconstructor () {\n\t\tsuper()\n\n\t\tthis.state = {\n\t\t\tmaze: null,\n\t\t\tgraphic: null,\n\t\t\tjson: null,\n\t\t\tnodeID: null,\n\t\t\tlengthInput: null,\n\t\t\theightInput: null,\n\t\t\tstyleOption: null,\n\t\t\tmethodOption: null,\n\t\t\tgenerate: null,\n\t\t}\n\t}\n\n\tcreateMazeGenerator () {\n\t\tconst mazeDimensions = [\n\t\t\tthis.state.lengthInput ?? 10,\n\t\t\tthis.state.heightInput ?? 10,\n\t\t]\n\t\tconst mazeShape = 'hypercube'\n\t\tconst mazeMethod = this.state.methodOption\n\t\t\t?? 'iterative depth-first traversal'\n\n\t\tthis.setState(\n\t\t\t// Create a new maze object\n\t\t\t{maze: new MazeGenerator(\n\t\t\t\tmazeDimensions,\n\t\t\t\tmazeShape,\n\t\t\t\tmazeMethod,\n\t\t\t)},\n\n\t\t\t// Callback for setState()\n\t\t\tthis.updateMazeGenerator\n\t\t)\n\t}\n\n\tupdateMazeGenerator () {\n\t\tlet {maze, generate, styleOption} = this.state\n\n\t\tlet graphic = null\n\t\tif (styleOption === null) {\n\t\t\tthis.setState({styleOption: 'pipe'})\n\t\t\tgraphic = createPipedTextGraphic(maze.graph)\n\t\t}\n\t\tif (styleOption === 'pipe') {\n\t\t\tgraphic = createPipedTextGraphic(maze.graph)\n\t\t}\n\t\telse if (styleOption === 'edge') {\n\t\t\tgraphic = createEdgedTextGraphic(maze.graph)\n\t\t}\n\n\t\tconst nodeID = (maze.graph.data.find((node) => {\n\t\t\treturn node.status === 'active'\n\t\t}) || {}).id ?? null\n\n\t\tconst json = JSON.stringify(JSON.parse(maze.graph.json), null, 2)\n\n\t\tthis.setState({\n\t\t\tmaze: maze,\n\t\t\tgraphic: graphic,\n\t\t\tjson: json,\n\t\t\tnodeID: nodeID,\n\t\t\tgenerate: generate ?? maze.generator(),\n\t\t})\n\t}\n\n\tclearMazeGenerator () {\n\t\tthis.setState({\n\t\t\tmaze: null,\n\t\t\tgraphic: null,\n\t\t\tjson: null,\n\t\t\tnodeID: null,\n\t\t\tgenerate: null,\n\t\t})\n\t}\n\n\tvalidateNaturalNumber (value) {\n\t\tif (value < 0) {\n\t\t\tvalue = 0\n\t\t}\n\t\telse if (value === '' || isNaN(value)) {\n\t\t\tvalue = null\n\t\t}\n\t\treturn value\n\t}\n\n\trender () { return ( <>\n\t\t<h1>\n\t\t\tMaze Generator\n\t\t</h1>\n\n\t\t<p>\n\t\t\tGenerate your maze by clicking the button a bunch.\n\t\t</p>\n\n\t\t<fieldset>\n\t\t\t<legend>Generator Parameters</legend>\n\n\t\t\t<div>\n\t\t\t\t<label>Generator Method/Algorithm</label>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='iterative-depth-first-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='maze-algorithm'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tmethodOption: 'iterative depth-first traversal'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='iterative-depth-first-option'>\n\t\t\t\t\t\t\tIterative Depth-First Search\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='iterative-breadth-first-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='maze-algorithm'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={false}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tmethodOption: 'iterative breadth-first traversal'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='iterative-breadth-first-option'>\n\t\t\t\t\t\t\tIterative Breadth-First Search\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<label>Graphic Style</label>\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='pipe-style-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='graphic-style'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={true}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tstyleOption: 'pipe'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='pipe-style-option'>\n\t\t\t\t\t\t\tPipe-Style Text Graphic\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='edge-style-option'\n\t\t\t\t\t\t\tclassName='toggle'\n\t\t\t\t\t\t\tname='graphic-style'\n\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\tdefaultChecked={false}\n\t\t\t\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\tstyleOption: 'edge'\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor='edge-style-option'>\n\t\t\t\t\t\t\tEdge-Style Text Graphic\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Maze Length</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Default: 10'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tdisabled={this.state.maze !== null}\n\t\t\t\t\tvalue={this.state.lengthInput ?? ''}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tlet {value} = event.target\n\t\t\t\t\t\tif (value !== null) {\n\t\t\t\t\t\t\tvalue = this.validateNaturalNumber(parseInt(value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({lengthInput: value})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Maze Height</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Default: 10'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tdisabled={this.state.maze !== null}\n\t\t\t\t\tvalue={this.state.heightInput ?? ''}\n\n\t\t\t\t\tonChange={(event) => {\n\t\t\t\t\t\tlet {value} = event.target\n\t\t\t\t\t\tif (value !== null) {\n\t\t\t\t\t\t\tvalue = this.validateNaturalNumber(parseInt(value))\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({heightInput: value})\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<label>Autogen Interval</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName='input-box'\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Default: 300'\n\t\t\t\t\tmin='0'\n\t\t\t\t\tdisabled={true}\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<hr />\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='↪️ Generate One Step'\n\t\t\t\tdisabled={this.state.maze === null}\n\n\t\t\t\tonClick={() => {\n\t\t\t\t\t// Generate next step of algorithm.\n\t\t\t\t\tthis.state.generate.next()\n\t\t\t\t\t// Update state properties accordingly.\n\t\t\t\t\tthis.updateMazeGenerator()\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='⏯ Play/Pause'\n\t\t\t\tdisabled={true}\n\n\t\t\t\tonClick={() => {\n\t\t\t\t// generate all steps of the algorithm.\n\t\t\t\t\tfor (const _ of this.state.generate) {}\n\t\t\t\t\tthis.updateGraphic()\n\t\t\t\t}}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='⏹ Stop Graphic'\n\t\t\t\tdisabled={this.state.maze === null}\n\n\t\t\t\tonClick={() => {this.clearMazeGenerator()}}\n\t\t\t/>\n\n\t\t\t<input\n\t\t\t\tclassName='button'\n\t\t\t\ttype='button'\n\t\t\t\tvalue='🔄 Start New Maze'\n\t\t\t\tdisabled={this.state.maze !== null}\n\n\t\t\t\tonClick={() => {this.createMazeGenerator()}}\n\t\t\t/>\n\t\t</fieldset>\n\n\t\t<figure>\n\t\t\t<div>\n\t\t\t\t<label>active node: </label>\n\t\t\t\t<output>{this.state.nodeID ?? 'not selected'}</output>\n\t\t\t</div>\n\t\t\t<pre><code>{this.state.graphic ?? ''}</code></pre>\n\t\t\t<pre><code>{this.state.json ?? ''}</code></pre>\n\t\t\t<figcaption>\n\t\t\t\tFigure 1: Maze Visual\n\t\t\t</figcaption>\n\t\t</figure>\n\t</> ) }\n}\n","const reportWebVitals = onPerfEntry => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}